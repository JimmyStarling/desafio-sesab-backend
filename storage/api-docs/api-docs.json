{
    "openapi": "3.0.0",
    "info": {
        "title": "Desafio SESAB API",
        "description": "Documentação da API do projeto Laravel 12",
        "contact": {
            "name": "Jimmy Starling",
            "email": "jimmystarlingdev@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "Servidor Local"
        }
    ],
    "paths": {
        "/api/addresses": {
            "get": {
                "tags": [
                    "Addresses"
                ],
                "summary": "List all addresses",
                "operationId": "dc6b190d3f07db7ed032fa181dc45150",
                "responses": {
                    "200": {
                        "description": "List of addresses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Address"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Addresses"
                ],
                "summary": "Create a new address",
                "operationId": "6344fc023028e43a5490f1c6372bd391",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "street",
                                    "city",
                                    "state",
                                    "zip"
                                ],
                                "properties": {
                                    "street": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "NY"
                                    },
                                    "zip": {
                                        "type": "string",
                                        "example": "10001"
                                    },
                                    "users": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Address created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "List users",
                "description": "Retrieve a paginated list of users",
                "operationId": "566aed8efb436ca506e0ef51a032ecd9",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by user name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Filter by user email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cpf",
                        "in": "query",
                        "description": "Filter by user CPF",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/bulk": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create multiple users",
                "description": "Creates multiple users in a single request. Only authenticated users with proper permissions can perform this action.",
                "operationId": "b37d49d1fecf07636b0a9a28dedcf7fc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/StoreUserRequest"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Users successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Users created successfully"
                                        },
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a user by ID",
                "description": "Retrieve user details along with profile and address",
                "operationId": "6f51bd5fa2dddcd25e44cfa53dcbd10a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "description": "Update an existing user and optionally their address",
                "operationId": "070e37fc9aff78ae73860751bc990ed3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "description": "Delete a specific user by ID\\n Only \\'Gestor\\' and \\'Administrador\\' can delete. And the Gestor cannot remove Administrator users.",
                "operationId": "0b4133ed462528a5e648b88ead11e929",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "8a56853624e025573120a09a4c75d468",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "cpf",
                                    "password",
                                    "profile_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jimmy Starling"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "jimmy@example.com"
                                    },
                                    "cpf": {
                                        "type": "string",
                                        "example": "123.456.789-01"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "profile_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "address": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "street": {
                                                    "type": "string",
                                                    "example": "123 Main St"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "New York"
                                                },
                                                "state": {
                                                    "type": "string",
                                                    "example": "NY"
                                                },
                                                "zip": {
                                                    "type": "string",
                                                    "example": "68702-190"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully registered"
                                        },
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user and get access token",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "root@root.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "root"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully logged in"
                                        },
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user and revoke tokens",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User logged out and tokens revoked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "DeleteUserRequest": {
                "title": "Delete User Request",
                "description": "Remove user from the system",
                "type": "object"
            },
            "StoreUserRequest": {
                "title": "Create User Request",
                "required": [
                    "name",
                    "email",
                    "cpf",
                    "password",
                    "profile_id"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Jimmy Starling"
                    },
                    "email": {
                        "type": "string",
                        "example": "jimmy@example.com"
                    },
                    "cpf": {
                        "type": "string",
                        "example": "670.653.190-16"
                    },
                    "password": {
                        "type": "string",
                        "example": "password123"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "example": "password123"
                    },
                    "profile_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "address": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "street": {
                                    "type": "string",
                                    "example": "123 Main St"
                                },
                                "city": {
                                    "type": "string",
                                    "example": "New York"
                                },
                                "state": {
                                    "type": "string",
                                    "example": "NY"
                                },
                                "zip": {
                                    "type": "string",
                                    "example": "68702-190"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "UpdateUserRequest": {
                "title": "UpdateUser",
                "description": "Update user information",
                "required": [
                    "name",
                    "email",
                    "cpf",
                    "password",
                    "profile_id"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Jimmy Starling"
                    },
                    "email": {
                        "type": "string",
                        "example": "jimmy@example.com"
                    },
                    "cpf": {
                        "type": "string",
                        "example": "670.653.190-16"
                    },
                    "password": {
                        "type": "string",
                        "example": "password123"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "example": "password123"
                    },
                    "profile_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "address": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "street": {
                                    "type": "string",
                                    "example": "123 Main St"
                                },
                                "city": {
                                    "type": "string",
                                    "example": "New York"
                                },
                                "state": {
                                    "type": "string",
                                    "example": "NY"
                                },
                                "zip": {
                                    "type": "string",
                                    "example": "68702-190"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Address": {
                "title": "Address",
                "required": [
                    "street",
                    "city",
                    "state",
                    "zip"
                ],
                "properties": {
                    "street": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "zip": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "required": [
                    "id",
                    "name",
                    "email"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "cpf": {
                        "type": "string"
                    },
                    "profile_id": {
                        "type": "integer"
                    },
                    "address": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Address"
                        }
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter your bearer token in the format **Bearer &lt;token>**",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Users",
            "description": "API Endpoints of Users"
        },
        {
            "name": "Auth",
            "description": "API Endpoints for authentication"
        },
        {
            "name": "Addresses",
            "description": "Addresses"
        }
    ]
}